// *************************************
//
//   #LAYOUT
//
// *************************************

// TreeFramework layout system uses `box-sizing: border-box;` and
// `display: inline-block;` to create an extremely powerful, flexible
// alternative to the traditional grid system. Combine the layout items with
// the widths found in `trumps.widths`.

// Predefine the variables below in order to alter and enable specific features.
$tree-layout-namespace:        $tree-namespace !default;

$tree-layout-gutter:           $tree-base-spacing-unit !default;
$tree-layout-gutter--tiny:       quarter($tree-layout-gutter) !default;
$tree-layout-gutter--small:        halve($tree-layout-gutter) !default;
$tree-layout-gutter--large:       double($tree-layout-gutter) !default;
$tree-layout-gutter--huge:     quadruple($tree-layout-gutter) !default;

$tree-enable-layout--tiny:     false !default;
$tree-enable-layout--small:    false !default;
$tree-enable-layout--large:    false !default;
$tree-enable-layout--huge:     false !default;
$tree-enable-layout--flush:    false !default;
$tree-enable-layout--rev:      false !default;
$tree-enable-layout--middle:   false !default;
$tree-enable-layout--bottom:   false !default;
$tree-enable-layout--right:    false !default;
$tree-enable-layout--center:   false !default;
$tree-enable-layout--auto:     false !default;





// Here we set a variable assuming that `box-sizing: border-box;` is not set
// globally. If it has been previously defined, the following variable will be
// overridden and will be set to `true`.
$tree-global-border-box: false !default;





// Begin a layout group.
.#{$tree-layout-namespace}layout,
%#{$tree-layout-namespace}layout {
    list-style: none;
    margin: 0;
    padding: 0;
    margin-left: -$tree-layout-gutter;
}

// 1. Cause columns to stack side-by-side.
// 2. Space columns apart.
// 3. Align columns to the tops of each other.
// 4. Full-width unless told to behave otherwise.
// 5. Require to combine fluid widths and fixed gutters.
.#{$tree-layout-namespace}layout__item,
%#{$tree-layout-namespace}layout__item {
    display: inline-block; // [1]
    padding-left: $tree-layout-gutter; // [2]
    vertical-align: top; // [3]
    width: 100%; // [4]


    @if $tree-global-border-box == false {
        box-sizing: border-box; // [5]
    }

}

@if ($tree-enable-layout--tiny == true) {

    // Layouts with tiny gutters.

    .#{$tree-layout-namespace}layout--tiny,
    %#{$tree-layout-namespace}layout--tiny {
        margin-left: -($tree-layout-gutter--tiny);

        > .#{$tree-layout-namespace}layout__item,
        > %#{$tree-layout-namespace}layout__item {
            padding-left: $tree-layout-gutter--tiny;
        }

    }

}

@if ($tree-enable-layout--small == true) {

    // Layouts with small gutters.

    .#{$tree-layout-namespace}layout--small,
    %#{$tree-layout-namespace}layout--small {
        margin-left: -($tree-layout-gutter--small);

        > .#{$tree-layout-namespace}layout__item,
        > %#{$tree-layout-namespace}layout__item {
            padding-left: $tree-layout-gutter--small;
        }

    }

}

@if ($tree-enable-layout--large == true) {

    // Layouts with large gutters.

    .#{$tree-layout-namespace}layout--large,
    %#{$tree-layout-namespace}layout--large {
        margin-left: -($tree-layout-gutter--large);

        > .#{$tree-layout-namespace}layout__item,
        > %#{$tree-layout-namespace}layout__item {
            padding-left: $tree-layout-gutter--large;
        }

    }

}

@if ($tree-enable-layout--huge == true) {

    // Layouts with huge gutters.

    .#{$tree-layout-namespace}layout--huge,
    %#{$tree-layout-namespace}layout--huge {
        margin-left: -($tree-layout-gutter--huge);

        > .#{$tree-layout-namespace}layout__item,
        > %#{$tree-layout-namespace}layout__item {
            padding-left: $tree-layout-gutter--huge;
        }

    }

}





@if ($tree-enable-layout--flush == true) {

    // Layouts with no gutters.

    .#{$tree-layout-namespace}layout--flush,
    %#{$tree-layout-namespace}layout--flush {

        > .#{$tree-layout-namespace}layout__item,
        > %#{$tree-layout-namespace}layout__item {
            padding-left: 0;
        }

    }

}





@if ($tree-enable-layout--rev == true) {

    // Reversed rendered order of layout items, e.g. items 1, 2, 3, 4 in your
    // markup will display in order 4, 3, 2, 1 on your page.

    .#{$tree-layout-namespace}layout--rev,
    %#{$tree-layout-namespace}layout--rev {
        direction: rtl;
        text-align: left;

        > .#{$tree-layout-namespace}layout__item,
        > %#{$tree-layout-namespace}layout__item {
            direction: ltr;
            text-align: left;
        }

    }

}





@if ($tree-enable-layout--middle == true) {

    // Align layout items to the vertical centers of each other.

    .#{$tree-layout-namespace}layout--middle,
    %#{$tree-layout-namespace}layout--middle {

        > .#{$tree-layout-namespace}layout__item,
        > %#{$tree-layout-namespace}layout__item {
            vertical-align: middle;
        }

    }

}

@if ($tree-enable-layout--bottom == true) {

    // Align layout items to the vertical bottoms of each other.

    .#{$tree-layout-namespace}layout--bottom,
    %#{$tree-layout-namespace}layout--bottom {

        > .#{$tree-layout-namespace}layout__item,
        > %#{$tree-layout-namespace}layout__item {
            vertical-align: bottom;
        }

    }

}





@if ($tree-enable-layout--right == true) {

    // Make the layout items fill up from the right hand side.

    .#{$tree-layout-namespace}layout--right,
    %#{$tree-layout-namespace}layout--right {
        text-align: right;

        > .#{$tree-layout-namespace}layout__item,
        > %#{$tree-layout-namespace}layout__item {
            text-align: left;
        }

    }

}

@if ($tree-enable-layout--center == true) {

    // Make the layout items fill up from the center outward.

    .#{$tree-layout-namespace}layout--center,
    %#{$tree-layout-namespace}layout--center {
        text-align: center;

        > .#{$tree-layout-namespace}layout__item,
        > %#{$tree-layout-namespace}layout__item {
            text-align: left;
        }

    }

}





@if ($tree-enable-layout--auto == true) {

    // Cause layout items to take up a non-explicit amount of width.

    .#{$tree-layout-namespace}layout--auto,
    %#{$tree-layout-namespace}layout--auto {

        > .#{$tree-layout-namespace}layout__item,
        > %#{$tree-layout-namespace}layout__item {
            width: auto;
        }

    }

}
